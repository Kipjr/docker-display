name: Docker

on:
  workflow_dispatch:
  release:
    types: [released]
 # push:
    # Publish `master` as Docker `latest` image.
   # branches:
   #   - master

    # Publish `v1.2.3` tags as releases.
    # tags:
    #  - v*

  # Run tests for any PRs.
  # pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    strategy:
      matrix:
        version_ubuntu: [18,20,22]
    runs-on: ubuntu-latest
    if:  ${{ success() }} && github.event_name == 'publish' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Set environment variables (workflow)
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "VERSION_UBUNTU=${{ matrix.version_ubuntu}}" >> $GITHUB_ENV
      - name: Set environment variables (environment)
        if: github.event_name != 'workflow_dispatch' || ( ${{ matrix.version_ubuntu }} == '')
        run: |
          echo "VERSION_UBUNTU=${{ vars.VERSION_UBUNTU }}" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.6.0
        with:
          cosign-release: 'v2.2.4'


      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3.6.1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx
          restore-keys: |
            ${{ runner.os }}-buildx

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{raw}}
            type=raw,value=${{ env.VERSION_UBUNTU }}-{{date 'YYYYMMDD-hhmmss' tz='Europe/Amsterdam'}}
            type=raw,value=${{ env.VERSION_UBUNTU }}-{{sha}}
            type=raw,value=${{ env.VERSION_UBUNTU }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.6.1
        with:
          context: ./src
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
             VERSION_UBUNTU=${{ env.VERSION_UBUNTU }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign --yes {}@${{ steps.build-and-push.outputs.digest }}
          
